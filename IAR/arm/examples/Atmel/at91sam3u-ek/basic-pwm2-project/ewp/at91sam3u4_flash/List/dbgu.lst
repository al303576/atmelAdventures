###############################################################################
#                                                                             #
#                                                       28/Feb/2012  20:28:07 #
# IAR ANSI C/C++ Compiler V6.30.6.33336/W32 KICKSTART for ARM                 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91lib\peripherals\dbgu\dbgu.c                 #
#    Command line =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91lib\peripherals\dbgu\dbgu.c -D at91sam3u4   #
#                    -D flash -D TRACE_LEVEL=4 -lC                            #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\List\ --remarks --diag_suppress Pe826,Pe1375 -o    #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\Obj\ --debug --endian=little --cpu=Cortex-M3 -e    #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0                           #
#                    Kickstart_2\arm\INC\c\DLib_Config_Full.h" -I             #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\..\..\..\at #
#                    91lib/peripherals\ -I C:\Users\Martin\Documents\AtmelAdv #
#                    entures\IAR\arm\examples\Atmel\at91sam3u-ek\basic-pwm2-p #
#                    roject\ewp\..\..\..\at91lib/components\ -I               #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\..\..\..\at #
#                    91lib\ -I C:\Users\Martin\Documents\AtmelAdventures\IAR\ #
#                    arm\examples\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\. #
#                    .\..\..\external_libs\ -I C:\Users\Martin\Documents\Atme #
#                    lAdventures\IAR\arm\examples\Atmel\at91sam3u-ek\basic-pw #
#                    m2-project\ewp\..\..\..\at91lib/boards/at91sam3u-ek\     #
#                    -Ohz --use_c++_inline                                    #
#    List file    =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\List\dbgu.lst                                      #
#    Object file  =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\Obj\dbgu.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\examples\Atmel\at91lib\peripherals\dbgu\dbgu.c
      1          /* ----------------------------------------------------------------------------
      2           *         ATMEL Microcontroller Software Support 
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2008, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          //------------------------------------------------------------------------------
     31          //         Headers
     32          //------------------------------------------------------------------------------
     33          
     34          #include "dbgu.h"
     35          #include <board.h>
     36          
     37          //------------------------------------------------------------------------------
     38          //         Global functions
     39          //------------------------------------------------------------------------------
     40          //------------------------------------------------------------------------------
     41          /// Initializes the DBGU with the given parameters, and enables both the
     42          /// transmitter and the receiver. The mode parameter contains the value of the
     43          /// DBGU_MR register.
     44          /// Value DBGU_STANDARD can be used for mode to get the most common configuration
     45          /// (i.e. aysnchronous, 8bits, no parity, 1 stop bit, no flow control).
     46          /// \param mode  Operating mode to configure.
     47          /// \param baudrate  Desired baudrate (e.g. 115200).
     48          /// \param mck  Frequency of the system master clock in Hz.
     49          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     50          void DBGU_Configure(
     51              unsigned int mode,
     52              unsigned int baudrate,
     53              unsigned int mck)
     54          {
   \                     DBGU_Configure:
   \   00000000   0xB510             PUSH     {R4,LR}
     55              #if defined(cortexm3)
     56              // Enable clock for UART
     57              AT91C_BASE_PMC->PMC_PCER = (1 << AT91C_ID_DBGU);
   \   00000002   0x....             LDR.N    R3,??DataTable3  ;; 0x400e0410
   \   00000004   0xF44F 0x7480      MOV      R4,#+256
   \   00000008   0x601C             STR      R4,[R3, #+0]
     58              #endif
     59          
     60              // Reset & disable receiver and transmitter, disable interrupts
     61              AT91C_BASE_DBGU->DBGU_CR = AT91C_US_RSTRX | AT91C_US_RSTTX;
   \   0000000A   0x....             LDR.N    R3,??DataTable3_1  ;; 0x400e0600
   \   0000000C   0x240C             MOVS     R4,#+12
   \   0000000E   0x601C             STR      R4,[R3, #+0]
     62              AT91C_BASE_DBGU->DBGU_IDR = 0xFFFFFFFF;
   \   00000010   0xF04F 0x34FF      MOV      R4,#-1
   \   00000014   0x60DC             STR      R4,[R3, #+12]
     63              
     64              // Configure baud rate
     65              AT91C_BASE_DBGU->DBGU_BRGR = mck / (baudrate * 16);
   \   00000016   0x0109             LSLS     R1,R1,#+4
   \   00000018   0xFBB2 0xF1F1      UDIV     R1,R2,R1
   \   0000001C   0x6219             STR      R1,[R3, #+32]
     66              
     67              // Configure mode register
     68              AT91C_BASE_DBGU->DBGU_MR = mode;
   \   0000001E   0x6058             STR      R0,[R3, #+4]
     69              
     70              // Disable DMA channel
     71              AT91C_BASE_DBGU->DBGU_PTCR = AT91C_PDC_RXTDIS | AT91C_PDC_TXTDIS;
   \   00000020   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400e0720
   \   00000022   0xF240 0x2102      MOVW     R1,#+514
   \   00000026   0x6001             STR      R1,[R0, #+0]
     72          
     73              // Enable receiver and transmitter
     74              AT91C_BASE_DBGU->DBGU_CR = AT91C_US_RXEN | AT91C_US_TXEN;
   \   00000028   0x2050             MOVS     R0,#+80
   \   0000002A   0x6018             STR      R0,[R3, #+0]
     75          }
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
     76          
     77          //------------------------------------------------------------------------------
     78          /// Outputs a character on the DBGU line.
     79          /// \note This function is synchronous (i.e. uses polling).
     80          /// \param c  Character to send.
     81          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     82          void DBGU_PutChar(unsigned char c)
     83          {
   \                     DBGU_PutChar:
   \   00000000   0x....             LDR.N    R1,??DataTable3_3  ;; 0x400e0614
     84              // Wait for the transmitter to be ready
     85              while ((AT91C_BASE_DBGU->DBGU_CSR & AT91C_US_TXEMPTY) == 0);
   \                     ??DBGU_PutChar_0:
   \   00000002   0x680A             LDR      R2,[R1, #+0]
   \   00000004   0x0592             LSLS     R2,R2,#+22
   \   00000006   0xD5FC             BPL.N    ??DBGU_PutChar_0
     86              
     87              // Send character
     88              AT91C_BASE_DBGU->DBGU_THR = c;
   \   00000008   0x6088             STR      R0,[R1, #+8]
     89              
     90              // Wait for the transfer to complete
     91              while ((AT91C_BASE_DBGU->DBGU_CSR & AT91C_US_TXEMPTY) == 0);
   \                     ??DBGU_PutChar_1:
   \   0000000A   0x6808             LDR      R0,[R1, #+0]
   \   0000000C   0x0580             LSLS     R0,R0,#+22
   \   0000000E   0xD5FC             BPL.N    ??DBGU_PutChar_1
     92          }
   \   00000010   0x4770             BX       LR               ;; return
     93          
     94          //------------------------------------------------------------------------------
     95          /// Return 1 if a character can be read in DBGU
     96          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     97          unsigned int DBGU_IsRxReady()
     98          {
     99              return (AT91C_BASE_DBGU->DBGU_CSR & AT91C_US_RXRDY);
   \                     DBGU_IsRxReady:
   \   00000000   0x....             LDR.N    R0,??DataTable3_3  ;; 0x400e0614
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF000 0x0001      AND      R0,R0,#0x1
   \   00000008   0x4770             BX       LR               ;; return
    100          }
    101          
    102          //------------------------------------------------------------------------------
    103          /// Reads and returns a character from the DBGU.
    104          /// \note This function is synchronous (i.e. uses polling).
    105          /// \return Character received.
    106          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    107          unsigned char DBGU_GetChar(void)
    108          {
   \                     DBGU_GetChar:
   \   00000000   0x....             LDR.N    R0,??DataTable3_3  ;; 0x400e0614
    109              while ((AT91C_BASE_DBGU->DBGU_CSR & AT91C_US_RXRDY) == 0);
   \                     ??DBGU_GetChar_0:
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x07C9             LSLS     R1,R1,#+31
   \   00000006   0xD5FC             BPL.N    ??DBGU_GetChar_0
    110              return AT91C_BASE_DBGU->DBGU_RHR;
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0xB2C0             UXTB     R0,R0
   \   0000000C   0x4770             BX       LR               ;; return
    111          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x400E0410         DC32     0x400e0410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x400E0600         DC32     0x400e0600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x400E0720         DC32     0x400e0720

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x400E0614         DC32     0x400e0614
    112          
    113          
    114          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  DBGU_Configure
        0  DBGU_GetChar
        0  DBGU_IsRxReady
        0  DBGU_PutChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
      46  DBGU_Configure
      14  DBGU_GetChar
      10  DBGU_IsRxReady
      18  DBGU_PutChar

 
 104 bytes in section .text
 
 104 bytes of CODE memory

Errors: none
Warnings: none
