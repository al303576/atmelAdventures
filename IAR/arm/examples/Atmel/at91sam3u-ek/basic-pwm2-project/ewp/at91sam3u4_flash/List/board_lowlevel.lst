###############################################################################
#                                                                             #
#                                                       28/Feb/2012  20:28:06 #
# IAR ANSI C/C++ Compiler V6.30.6.33336/W32 KICKSTART for ARM                 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91lib\boards\at91sam3u-ek\board_lowlevel.c    #
#    Command line =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91lib\boards\at91sam3u-ek\board_lowlevel.c    #
#                    -D at91sam3u4 -D flash -D TRACE_LEVEL=4 -lC              #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\List\ --remarks --diag_suppress Pe826,Pe1375 -o    #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\Obj\ --debug --endian=little --cpu=Cortex-M3 -e    #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0                           #
#                    Kickstart_2\arm\INC\c\DLib_Config_Full.h" -I             #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\..\..\..\at #
#                    91lib/peripherals\ -I C:\Users\Martin\Documents\AtmelAdv #
#                    entures\IAR\arm\examples\Atmel\at91sam3u-ek\basic-pwm2-p #
#                    roject\ewp\..\..\..\at91lib/components\ -I               #
#                    C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\..\..\..\at #
#                    91lib\ -I C:\Users\Martin\Documents\AtmelAdventures\IAR\ #
#                    arm\examples\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\. #
#                    .\..\..\external_libs\ -I C:\Users\Martin\Documents\Atme #
#                    lAdventures\IAR\arm\examples\Atmel\at91sam3u-ek\basic-pw #
#                    m2-project\ewp\..\..\..\at91lib/boards/at91sam3u-ek\     #
#                    -Ohz --use_c++_inline                                    #
#    List file    =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\List\board_lowlevel.lst                            #
#    Object file  =  C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\exampl #
#                    es\Atmel\at91sam3u-ek\basic-pwm2-project\ewp\at91sam3u4_ #
#                    flash\Obj\board_lowlevel.o                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Martin\Documents\AtmelAdventures\IAR\arm\examples\Atmel\at91lib\boards\at91sam3u-ek\board_lowlevel.c
      1          /* ----------------------------------------------------------------------------
      2           *         ATMEL Microcontroller Software Support
      3           * ----------------------------------------------------------------------------
      4           * Copyright (c) 2008, Atmel Corporation
      5           *
      6           * All rights reserved.
      7           *
      8           * Redistribution and use in source and binary forms, with or without
      9           * modification, are permitted provided that the following conditions are met:
     10           *
     11           * - Redistributions of source code must retain the above copyright notice,
     12           * this list of conditions and the disclaimer below.
     13           *
     14           * Atmel's name may not be used to endorse or promote products derived from
     15           * this software without specific prior written permission.
     16           *
     17           * DISCLAIMER: THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
     18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     19           * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
     20           * DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
     21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     22           * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
     23           * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     24           * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     25           * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     26           * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     27           * ----------------------------------------------------------------------------
     28           */
     29          
     30          //------------------------------------------------------------------------------
     31          /// \unit
     32          ///
     33          /// !Purpose
     34          ///
     35          /// Provides the low-level initialization function that gets called on chip
     36          /// startup.
     37          ///
     38          /// !Usage
     39          ///
     40          /// LowLevelInit() is called in #board_cstartup_xxx.c#.
     41          //------------------------------------------------------------------------------
     42          
     43          //------------------------------------------------------------------------------
     44          //         Headers
     45          //------------------------------------------------------------------------------
     46          
     47          #include "board.h"
     48          #include "board_memories.h"
     49          #include "board_lowlevel.h"
     50          #include <pio/pio.h>
     51          
     52          //------------------------------------------------------------------------------
     53          //         Local definitions
     54          //------------------------------------------------------------------------------
     55          // Settings at 48/48MHz
     56          #define AT91C_CKGR_MUL_SHIFT         16
     57          #define AT91C_CKGR_OUT_SHIFT         14
     58          #define AT91C_CKGR_PLLCOUNT_SHIFT     8
     59          #define AT91C_CKGR_DIV_SHIFT          0
     60          
     61          // Note: 
     62          // MOSCXTST in CKGR_MOR takes 0x3F here, you can change it according to
     63          // Crystal Oscillators Characteristics for quick startup; 
     64          // PLLACOUNT in CKGR_PLLAR takes 0x3F here, you can change it according to 
     65          // PLLA Characteristics for quick startup.
     66          #define BOARD_OSCOUNT         (AT91C_CKGR_MOSCXTST & (0x3F << 8))
     67          #define BOARD_PLLR ((1 << 29) | (0x7 << AT91C_CKGR_MUL_SHIFT) \
     68                  | (0x0 << AT91C_CKGR_OUT_SHIFT) |(0x3F << AT91C_CKGR_PLLCOUNT_SHIFT) \
     69                  | (0x1 << AT91C_CKGR_DIV_SHIFT))
     70          #define BOARD_MCKR ( AT91C_PMC_PRES_CLK_2 | AT91C_PMC_CSS_PLLA_CLK)
     71          
     72          // Define clock timeout
     73          #define CLOCK_TIMEOUT           0xFFFFFFFF
     74          
     75          //------------------------------------------------------------------------------
     76          //         Local variables
     77          //------------------------------------------------------------------------------
     78          
     79          //------------------------------------------------------------------------------
     80          //         Local functions
     81          //------------------------------------------------------------------------------
     82          
     83          //------------------------------------------------------------------------------
     84          //         Exported functions
     85          //------------------------------------------------------------------------------
     86          
     87          //------------------------------------------------------------------------------
     88          /// After POR, at91sam3u device is running on 4MHz internal RC
     89          /// At the end of the LowLevelInit procedure MCK = 48MHz PLLA = 96 CPU=48MHz
     90          /// Performs the low-level initialization of the chip. This includes EFC, master
     91          /// clock, IRQ & watchdog configuration.
     92          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     93          void LowLevelInit(void)
     94          {
     95              unsigned int timeout = 0;
   \                     LowLevelInit:
   \   00000000   0x2100             MOVS     R1,#+0
     96          
     97              /* Set 2 WS for Embedded Flash Access
     98               ************************************/
     99              AT91C_BASE_EFC0->EFC_FMR = AT91C_EFC_FWS_2WS;
   \   00000002   0xF44F 0x7000      MOV      R0,#+512
   \   00000006   0x....             LDR.N    R2,??DataTable1  ;; 0x400e0800
   \   00000008   0x6010             STR      R0,[R2, #+0]
    100              AT91C_BASE_EFC1->EFC_FMR = AT91C_EFC_FWS_2WS;
   \   0000000A   0x....             LDR.N    R2,??DataTable1_1  ;; 0x400e0a00
   \   0000000C   0x6010             STR      R0,[R2, #+0]
    101          
    102              /* Watchdog initialization
    103               *************************/
    104              AT91C_BASE_WDTC->WDTC_WDMR = AT91C_WDTC_WDDIS;
   \   0000000E   0x....             LDR.N    R0,??DataTable1_2  ;; 0x400e1210
   \   00000010   0xF44F 0x4200      MOV      R2,#+32768
   \   00000014   0x6442             STR      R2,[R0, #+68]
    105          
    106              /* Select external slow clock
    107               ****************************/
    108              if ((AT91C_BASE_SUPC->SUPC_SR & AT91C_SUPC_SR_OSCSEL_CRYST) != AT91C_SUPC_SR_OSCSEL_CRYST) {
   \   00000016   0x6942             LDR      R2,[R0, #+20]
   \   00000018   0x0612             LSLS     R2,R2,#+24
   \   0000001A   0xD406             BMI.N    ??LowLevelInit_0
    109                  AT91C_BASE_SUPC->SUPC_CR = AT91C_SUPC_CR_XTALSEL_CRYSTAL_SEL | (0xA5 << 24);
                                                    ^
Remark[Pe068]: integer conversion resulted in a change of sign
   \   0000001C   0x....             LDR.N    R2,??DataTable1_3  ;; 0xa5000008
   \   0000001E   0x6002             STR      R2,[R0, #+0]
    110                  timeout = 0;
    111                  while (!(AT91C_BASE_SUPC->SUPC_SR & AT91C_SUPC_SR_OSCSEL_CRYST) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_1:
   \   00000020   0x6942             LDR      R2,[R0, #+20]
   \   00000022   0x0612             LSLS     R2,R2,#+24
   \   00000024   0xD401             BMI.N    ??LowLevelInit_0
   \   00000026   0x1C49             ADDS     R1,R1,#+1
   \   00000028   0xD1FA             BNE.N    ??LowLevelInit_1
    112              }
    113          
    114              /* Initialize main oscillator
    115               ****************************/
    116              if(!(AT91C_BASE_PMC->PMC_MOR & AT91C_CKGR_MOSCSEL))
   \                     ??LowLevelInit_0:
   \   0000002A   0x....             LDR.N    R0,??DataTable1_4  ;; 0x400e0410
   \   0000002C   0x6901             LDR      R1,[R0, #+16]
   \   0000002E   0x01C9             LSLS     R1,R1,#+7
   \   00000030   0xD407             BMI.N    ??LowLevelInit_2
    117              {
    118          
    119                  AT91C_BASE_PMC->PMC_MOR = (0x37 << 16) | BOARD_OSCOUNT | AT91C_CKGR_MOSCRCEN | AT91C_CKGR_MOSCXTEN;
   \   00000032   0x....             LDR.N    R1,??DataTable1_5  ;; 0x373f09
   \   00000034   0x6101             STR      R1,[R0, #+16]
    120                  timeout = 0;
   \   00000036   0x2100             MOVS     R1,#+0
    121                  while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MOSCXTS) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_3:
   \   00000038   0x6D82             LDR      R2,[R0, #+88]
   \   0000003A   0x07D2             LSLS     R2,R2,#+31
   \   0000003C   0xD401             BMI.N    ??LowLevelInit_2
   \   0000003E   0x1C49             ADDS     R1,R1,#+1
   \   00000040   0xD1FA             BNE.N    ??LowLevelInit_3
    122                  
    123              }
    124           
    125              /* Switch to 3-20MHz Xtal oscillator */
    126              AT91C_BASE_PMC->PMC_MOR = (0x37 << 16) | BOARD_OSCOUNT | AT91C_CKGR_MOSCRCEN | AT91C_CKGR_MOSCXTEN | AT91C_CKGR_MOSCSEL;
   \                     ??LowLevelInit_2:
   \   00000042   0x....             LDR.N    R1,??DataTable1_6  ;; 0x1373f09
   \   00000044   0x6101             STR      R1,[R0, #+16]
    127              timeout = 0;
   \   00000046   0x2100             MOVS     R1,#+0
    128              while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MOSCSELS) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_4:
   \   00000048   0x6D82             LDR      R2,[R0, #+88]
   \   0000004A   0x03D2             LSLS     R2,R2,#+15
   \   0000004C   0xD401             BMI.N    ??LowLevelInit_5
   \   0000004E   0x1C49             ADDS     R1,R1,#+1
   \   00000050   0xD1FA             BNE.N    ??LowLevelInit_4
    129              AT91C_BASE_PMC->PMC_MCKR = (AT91C_BASE_PMC->PMC_MCKR & ~AT91C_PMC_CSS) | AT91C_PMC_CSS_MAIN_CLK;
                                                                            ^
Remark[Pe068]: integer conversion resulted in a change of sign
   \                     ??LowLevelInit_5:
   \   00000052   0x6A01             LDR      R1,[R0, #+32]
   \   00000054   0x08C9             LSRS     R1,R1,#+3
   \   00000056   0x00C9             LSLS     R1,R1,#+3
   \   00000058   0xF041 0x0101      ORR      R1,R1,#0x1
   \   0000005C   0x6201             STR      R1,[R0, #+32]
    130              timeout = 0;
   \   0000005E   0x2100             MOVS     R1,#+0
    131              while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_6:
   \   00000060   0x6D82             LDR      R2,[R0, #+88]
   \   00000062   0x0712             LSLS     R2,R2,#+28
   \   00000064   0xD401             BMI.N    ??LowLevelInit_7
   \   00000066   0x1C49             ADDS     R1,R1,#+1
   \   00000068   0xD1FA             BNE.N    ??LowLevelInit_6
    132          
    133              /* Initialize PLLA */
    134              AT91C_BASE_PMC->PMC_PLLAR = BOARD_PLLR;
   \                     ??LowLevelInit_7:
   \   0000006A   0x....             LDR.N    R1,??DataTable1_7  ;; 0x20073f01
   \   0000006C   0x6181             STR      R1,[R0, #+24]
    135              timeout = 0;
   \   0000006E   0x2100             MOVS     R1,#+0
    136              while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKA) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_8:
   \   00000070   0x6D82             LDR      R2,[R0, #+88]
   \   00000072   0x0792             LSLS     R2,R2,#+30
   \   00000074   0xD401             BMI.N    ??LowLevelInit_9
   \   00000076   0x1C49             ADDS     R1,R1,#+1
   \   00000078   0xD1FA             BNE.N    ??LowLevelInit_8
    137          
    138              /* Initialize UTMI for USB usage */
    139              AT91C_BASE_CKGR->CKGR_UCKR |= (AT91C_CKGR_UPLLCOUNT & (3 << 20)) | AT91C_CKGR_UPLLEN;
   \                     ??LowLevelInit_9:
   \   0000007A   0x68C1             LDR      R1,[R0, #+12]
   \   0000007C   0xF441 0x1144      ORR      R1,R1,#0x310000
   \   00000080   0x60C1             STR      R1,[R0, #+12]
    140              timeout = 0;
   \   00000082   0x2100             MOVS     R1,#+0
    141              while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKU) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_10:
   \   00000084   0x6D82             LDR      R2,[R0, #+88]
   \   00000086   0x0652             LSLS     R2,R2,#+25
   \   00000088   0xD401             BMI.N    ??LowLevelInit_11
   \   0000008A   0x1C49             ADDS     R1,R1,#+1
   \   0000008C   0xD1FA             BNE.N    ??LowLevelInit_10
    142          
    143              /* Switch to fast clock
    144               **********************/
    145              AT91C_BASE_PMC->PMC_MCKR = (BOARD_MCKR & ~AT91C_PMC_CSS) | AT91C_PMC_CSS_MAIN_CLK;
   \                     ??LowLevelInit_11:
   \   0000008E   0x2111             MOVS     R1,#+17
   \   00000090   0x6201             STR      R1,[R0, #+32]
    146              timeout = 0;
   \   00000092   0x2100             MOVS     R1,#+0
    147              while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_12:
   \   00000094   0x6D82             LDR      R2,[R0, #+88]
   \   00000096   0x0712             LSLS     R2,R2,#+28
   \   00000098   0xD401             BMI.N    ??LowLevelInit_13
   \   0000009A   0x1C49             ADDS     R1,R1,#+1
   \   0000009C   0xD1FA             BNE.N    ??LowLevelInit_12
    148          
    149              AT91C_BASE_PMC->PMC_MCKR = BOARD_MCKR;
   \                     ??LowLevelInit_13:
   \   0000009E   0x2112             MOVS     R1,#+18
   \   000000A0   0x6201             STR      R1,[R0, #+32]
    150              timeout = 0;
   \   000000A2   0x2100             MOVS     R1,#+0
    151              while (!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) && (timeout++ < CLOCK_TIMEOUT));
   \                     ??LowLevelInit_14:
   \   000000A4   0x6D82             LDR      R2,[R0, #+88]
   \   000000A6   0x0712             LSLS     R2,R2,#+28
   \   000000A8   0xD401             BMI.N    ??LowLevelInit_15
   \   000000AA   0x1C49             ADDS     R1,R1,#+1
   \   000000AC   0xD1FA             BNE.N    ??LowLevelInit_14
    152          
    153              /* Enable clock for UART
    154               ************************/
    155              AT91C_BASE_PMC->PMC_PCER = (1 << AT91C_ID_DBGU);
   \                     ??LowLevelInit_15:
   \   000000AE   0xF44F 0x7180      MOV      R1,#+256
   \   000000B2   0x6001             STR      R1,[R0, #+0]
    156          
    157              /* Optimize CPU setting for speed */
    158              SetDefaultMaster(1);
   \   000000B4   0x2001             MOVS     R0,#+1
   \   000000B6                      REQUIRE SetDefaultMaster
   \   000000B6                      ;; // Fall through to label SetDefaultMaster
    159          
    160          }
    161          
    162          //------------------------------------------------------------------------------
    163          /// Enable or disable default master access
    164          /// \param enalbe 1 enable defaultMaster settings, 0 disable it.
    165          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    166          void SetDefaultMaster(unsigned char enable)
    167          {
    168              AT91PS_HMATRIX2 pMatrix = AT91C_BASE_MATRIX;
    169          
    170              // Set default master
    171              if (enable == 1) {
   \                     SetDefaultMaster:
   \   00000000   0x....             LDR.N    R1,??DataTable1_8  ;; 0x400e0240
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0x6808             LDR      R0,[R1, #+0]
   \   00000006   0xD10A             BNE.N    ??SetDefaultMaster_0
    172          
    173                  // Set default master: SRAM0 -> Cortex-M3 System
    174                  pMatrix->HMATRIX2_SCFG0 |= AT91C_MATRIX_FIXED_DEFMSTR_SCFG0_ARMS |
    175                                             AT91C_MATRIX_DEFMSTR_TYPE_FIXED_DEFMSTR;
   \   00000008   0xF440 0x20C0      ORR      R0,R0,#0x60000
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    176                  
    177                  // Set default master: SRAM1 -> Cortex-M3 System
    178                  pMatrix->HMATRIX2_SCFG1 |= AT91C_MATRIX_FIXED_DEFMSTR_SCFG1_ARMS |
    179                                             AT91C_MATRIX_DEFMSTR_TYPE_FIXED_DEFMSTR;
   \   0000000E   0x6848             LDR      R0,[R1, #+4]
   \   00000010   0xF440 0x20C0      ORR      R0,R0,#0x60000
   \   00000014   0x6048             STR      R0,[R1, #+4]
    180          
    181                  // Set default master: Internal flash0 -> Cortex-M3 Instruction/Data
    182                  pMatrix->HMATRIX2_SCFG3 |= AT91C_MATRIX_FIXED_DEFMSTR_SCFG3_ARMC |
    183                                             AT91C_MATRIX_DEFMSTR_TYPE_FIXED_DEFMSTR;
   \   00000016   0x68C8             LDR      R0,[R1, #+12]
   \   00000018   0xF440 0x3000      ORR      R0,R0,#0x20000
   \   0000001C   0xE009             B.N      ??SetDefaultMaster_1
    184              } else {
    185          
    186                  // Clear default master: SRAM0 -> Cortex-M3 System
    187                  pMatrix->HMATRIX2_SCFG0 &= (~AT91C_MATRIX_DEFMSTR_TYPE);
                                                    ^
Remark[Pe068]: integer conversion resulted in a change of sign
   \                     ??SetDefaultMaster_0:
   \   0000001E   0xF420 0x3040      BIC      R0,R0,#0x30000
   \   00000022   0x6008             STR      R0,[R1, #+0]
    188                  
    189                  // Clear default master: SRAM1 -> Cortex-M3 System
    190                  pMatrix->HMATRIX2_SCFG1 &= (~AT91C_MATRIX_DEFMSTR_TYPE);
                                                    ^
Remark[Pe068]: integer conversion resulted in a change of sign
   \   00000024   0x6848             LDR      R0,[R1, #+4]
   \   00000026   0xF420 0x3040      BIC      R0,R0,#0x30000
   \   0000002A   0x6048             STR      R0,[R1, #+4]
    191          
    192                  // Clear default master: Internal flash0 -> Cortex-M3 Instruction/Data
    193                  pMatrix->HMATRIX2_SCFG3 &= (~AT91C_MATRIX_DEFMSTR_TYPE);
                                                    ^
Remark[Pe068]: integer conversion resulted in a change of sign
   \   0000002C   0x68C8             LDR      R0,[R1, #+12]
   \   0000002E   0xF420 0x3040      BIC      R0,R0,#0x30000
   \                     ??SetDefaultMaster_1:
   \   00000032   0x60C8             STR      R0,[R1, #+12]
    194              }
    195          }
   \   00000034   0x4770             BX       LR               ;; return
    196          
    197          //------------------------------------------------------------------------------
    198          /// Set flash wait state
    199          /// \param ws    Value of flash wait state
    200          //------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    201          void SetFlashWaitState(unsigned char ws)
    202          {
    203              // Set Wait State for Embedded Flash Access
    204          	AT91C_BASE_EFC0->EFC_FMR = ((ws << 8) & AT91C_EFC_FWS);
   \                     SetFlashWaitState:
   \   00000000   0x0200             LSLS     R0,R0,#+8
   \   00000002   0xF400 0x6070      AND      R0,R0,#0xF00
   \   00000006   0x....             LDR.N    R1,??DataTable1  ;; 0x400e0800
   \   00000008   0x6008             STR      R0,[R1, #+0]
    205          	AT91C_BASE_EFC1->EFC_FMR = ((ws << 8) & AT91C_EFC_FWS);
   \   0000000A   0x....             LDR.N    R1,??DataTable1_1  ;; 0x400e0a00
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    206          }
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400E0800         DC32     0x400e0800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x400E0A00         DC32     0x400e0a00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x400E1210         DC32     0x400e1210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0xA5000008         DC32     0xa5000008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x400E0410         DC32     0x400e0410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x00373F09         DC32     0x373f09

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x01373F09         DC32     0x1373f09

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x20073F01         DC32     0x20073f01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x400E0240         DC32     0x400e0240
    207          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  LowLevelInit
             0 -> SetDefaultMaster
        0  SetDefaultMaster
        0  SetFlashWaitState


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
     182  LowLevelInit
      54  SetDefaultMaster
      16  SetFlashWaitState

 
 288 bytes in section .text
 
 288 bytes of CODE memory

Errors: none
Warnings: none
